name: CI with Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  docker-build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image (if needed)
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository }}:latest
        docker pull $IMAGE_NAME || true
        docker buildx build -t $IMAGE_NAME .
        IMAGE_NAME=ghcr.io/${{ github.repository }}:latest
        docker push $IMAGE_NAME

    - name: Start container in background
      run: |
        docker run -d --name ci_container \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ghcr.io/${{ github.repository }}:latest \
          tail -f /dev/null

    - name: Sync uv
      run: |
        docker exec ci_container bash -c "uv sync"

    - name: Install conan packages
      run: |
        docker exec ci_container bash -c "
        mkdir build && \
        cd build && \
        uv run conan profile detect --force && \
        uv run conan install .. --output-folder=./conan --build=missing"

    - name: Configure
      run: |
        docker exec ci_container bash -c \
        "cd build && uv run cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release"

    - name: Build
      run: |
        docker exec ci_container bash -c \
        "cd build && uv run ninja"

    - name: Tests
      run: |
        docker exec ci_container bash -c \
        "cd build && uv run ctest --output-on-failure"

    - name: Stop and remove container
      if: always()
      run: docker rm -f ci_container
